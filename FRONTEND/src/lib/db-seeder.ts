import db from './db'

export async function seedDatabase() {
  try {
    console.log('üå± Seeding database...')

    // Check if alerts already exist
    const existingAlerts = await db.alert.count()
    if (existingAlerts > 0) {
      console.log('üìä Database already has alerts, skipping seed')
      return
    }

    // Create some initial alerts for testing
    const alertsToCreate = [
      {
        type: 'CYCLONE' as const,
        severity: 'HIGH' as const,
        status: 'GENERATED' as const,
        title: 'High Cyclone Formation Risk Detected',
        description: 'ML model detected 87% probability of cyclone formation in the next 48 hours based on current atmospheric conditions including wind speed of 165 km/h and central pressure of 975 hPa.',
        region: 'Gujarat Coast',
        state: 'Gujarat',
        coordinates: { lat: 22.15, lng: 71.05 },
        predictionData: {
          windSpeed: 165,
          centralPressure: 975,
          seaSurfaceTemp: 29.5,
          humidity: 85,
          convectiveActivity: 0.82,
        },
        mlPrediction: 0.87,
        thresholdMet: true,
        autoGenerated: true,
      },
      {
        type: 'STORM_SURGE' as const,
        severity: 'EXTREME' as const,
        status: 'PENDING_APPROVAL' as const,
        title: 'Extreme Storm Surge Warning',
        description: 'Critical water level rise detected with immediate flooding risk for coastal communities. Current water level: 5.8m with wave heights reaching 7.2m.',
        region: 'Maharashtra Coast',
        state: 'Maharashtra',
        coordinates: { lat: 18.52, lng: 73.86 },
        predictionData: {
          waterLevel: 5.8,
          waveHeight: 7.2,
          windSpeed: 105,
          atmosphericPressure: 985,
        },
        mlPrediction: 0.92,
        thresholdMet: true,
        autoGenerated: true,
      },
      {
        type: 'COASTAL_EROSION' as const,
        severity: 'MODERATE' as const,
        status: 'GENERATED' as const,
        title: 'Coastal Erosion Alert',
        description: 'Significant coastal erosion detected with rate of 2.4 m/year. Beach width has reduced to 28m with wave energy at 180 kW/m.',
        region: 'Tamil Nadu Coast',
        state: 'Tamil Nadu',
        coordinates: { lat: 13.08, lng: 80.27 },
        predictionData: {
          erosionRate: 2.4,
          beachWidth: 28,
          waveEnergy: 180,
          vegetationCover: 0.45,
        },
        mlPrediction: 0.68,
        thresholdMet: true,
        autoGenerated: true,
      },
      {
        type: 'WATER_POLLUTION' as const,
        severity: 'HIGH' as const,
        status: 'APPROVED' as const,
        title: 'Water Quality Degradation Alert',
        description: 'Significant increase in turbidity and chemical pollutants detected. pH levels at 6.2, turbidity at 35 NTU, and dissolved oxygen at 3.8 mg/L.',
        region: 'Kerala Coast',
        state: 'Kerala',
        coordinates: { lat: 9.93, lng: 76.27 },
        predictionData: {
          pH: 6.2,
          turbidity: 35,
          dissolvedOxygen: 3.8,
          nitrateLevel: 12.5,
          biodiversityIndex: 0.42,
        },
        mlPrediction: 0.82,
        thresholdMet: true,
        autoGenerated: true,
        approvedAt: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 hours ago
      },
      {
        type: 'CYCLONE' as const,
        severity: 'MODERATE' as const,
        status: 'APPROVED' as const,
        title: 'Moderate Cyclone Risk',
        description: 'Developing low-pressure system with 65% probability of cyclone formation. Wind speeds at 95 km/h with central pressure of 995 hPa.',
        region: 'Odisha Coast',
        state: 'Odisha',
        coordinates: { lat: 20.27, lng: 85.84 },
        predictionData: {
          windSpeed: 95,
          centralPressure: 995,
          seaSurfaceTemp: 28.2,
          humidity: 78,
          convectiveActivity: 0.65,
        },
        mlPrediction: 0.65,
        thresholdMet: true,
        autoGenerated: true,
        approvedAt: new Date(Date.now() - 4 * 60 * 60 * 1000), // 4 hours ago
        sentAt: new Date(Date.now() - 3 * 60 * 60 * 1000), // 3 hours ago
      },
    ]

    // Create alerts
    for (const alertData of alertsToCreate) {
      await db.alert.create({
        data: alertData,
      })
    }

    console.log(`‚úÖ Created ${alertsToCreate.length} seed alerts`)
    console.log('üå± Database seeding completed!')

  } catch (error) {
    console.error('‚ùå Error seeding database:', error)
    throw error
  }
}

// Auto-seed on import in development
if (process.env.NODE_ENV === 'development') {
  seedDatabase().catch(console.error)
}
